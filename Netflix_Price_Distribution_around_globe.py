# -*- coding: utf-8 -*-
"""Ststistics CA1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-2g40MRwevPtavJ_sRNdcovrL3kQGx3K
"""

myData = read.csv('/content/netflix price in different countries.csv', header = T)
head(myData)

"""mean of (no. of movies,shows,library size, cost per month on standard/basic/premium basis)"""

pie(myData$Cost.Per.Month...Standard....,myData$Country)

mean1 = mean(myData$Total.Library.Size)
print(mean1)

mean2 = mean(myData$No..of.TV.Shows)
print(mean2)

mean3 = mean(myData$Cost.Per.Month...Basic....)
print(mean3)

mean4 = mean(myData$Cost.Per.Month...Standard....)
print(mean4)

mean5 = mean(myData$Cost.Per.Month...Premium....)
print(mean5)

mean6 = mean(myData$No..of.Movies)
print(mean6)

"""median of (no. of movies,shows,library size, cost per month on standard/basic/premium basis)"""

median1 = median(myData$Total.Library.Size)
print(median1)

median2 = median(myData$No..of.TV.Shows)
print(median2)

median3 = median(myData$Cost.Per.Month...Basic....)
print(median3)

median4 = median(myData$Cost.Per.Month...Standard....)
print(median4)

median5 = median(myData$Cost.Per.Month...Premium....)
print(median5)

median6 = median(myData$No..of.Movies)
print(median6)

"""minimum and maximum no. """

# Calculate the maximum
max1 = max(myData$Total.Library.Size)
# Calculate the minimum
min1 = min(myData$Total.Library.Size)
# Calculate the range
range1 = max1 - min1
 
cat("Min,max range is:\n")
print(range1)
 
# Alternate method to get min and max
# r = range(myData$Age)
# print(r)

max2 = max(myData$No..of.TV.Shows)
print(max2)

min2 = min(myData$No..of.TV.Shows)
print(min2)

# Calculate the maximum
max2 = max(myData$No..of.TV.Shows)
# Calculate the minimum
min2 = min(myData$No..of.TV.Shows)
# Calculate the range
range2 = max2 - min2
 
cat("Min,max range is:\n")
print(range2)

max3 = max(myData$Cost.Per.Month...Basic....)
print(max3)

min3 = min(myData$Cost.Per.Month...Basic....)
print(min3)

# Calculate the maximum
max3 = max(myData$Cost.Per.Month...Basic....)
# Calculate the minimum
min3 = min(myData$Cost.Per.Month...Basic....)
# Calculate the range
range3 = max3 - min3
 
cat("Min,max range is:\n")
print(range3)

max4 = max(myData$Cost.Per.Month...Standard....)
print(max4)

min4 = min(myData$Cost.Per.Month...Standard....)
print(min4)

# Calculate the maximum
max4 = max(myData$Cost.Per.Month...Standard....)
# Calculate the minimum
min4 = min(myData$Cost.Per.Month...Standard....)
# Calculate the range
range4 = max4 - min4
 
cat("Min,max range is:\n")
print(range4)

max5 = max(myData$Cost.Per.Month...Premium....)
print(max5)

min5 = min(myData$Cost.Per.Month...Premium....)
print(min5)

# Calculate the maximum
max5 = max(myData$Cost.Per.Month...Premium....)
# Calculate the minimum
min5 = min(myData$Cost.Per.Month...Premium....)
# Calculate the range
range5 = max5 - min5
 
cat("Min,max range is:\n")
print(range5)

max6 = max(myData$No..of.Movies)
print(max6)

min6 = min(myData$No..of.Movies)
print(min6)

# Calculate the maximum
max6 = max(myData$No..of.Movies)
# Calculate the minimum
min6 = min(myData$No..of.Movies)
# Calculate the range
range6 = max6 - min6
 
cat("Min,max range is:\n")
print(range6)

"""calculating variance of the variables


"""

# Calculating variance
variance1 = var(myData$Total.Library.Size)
print(variance1)

variance2 = var(myData$No..of.TV.Shows)
print(variance2)

variance3 = var(myData$Cost.Per.Month...Basic....)
print(variance3)

variance4 = var(myData$Cost.Per.Month...Standard....)
print(variance4)

variance5 = var(myData$Cost.Per.Month...Premium....)
print(variance5)

variance6 = var(myData$No..of.Movies)
print(variance6)

"""calculating Standard Deviation (SD) of the variables"""

# Calculating Standard deviation
std1 = sd(myData$Total.Library.Size)
print(std1)

std2 = sd(myData$No..of.TV.Shows)
print(std2)

std3 = sd(myData$Cost.Per.Month...Basic....)
print(std3)

std4 = sd(myData$Cost.Per.Month...Standard....)
print(std4)

std5 = sd(myData$Cost.Per.Month...Premium....)
print(std5)

std6 = sd(myData$No..of.Movies)
print(std6)

# Calculating Quartiles
quartiles1 = quantile(myData$Total.Library.Size)
print(quartiles1)

quartiles2 = quantile(myData$No..of.TV.Shows)
print(quartiles2)

quartiles3 = quantile(myData$Cost.Per.Month...Basic....)
print(quartiles3)

quartiles4 = quantile(myData$Cost.Per.Month...Standard....)
print(quartiles4)

quartiles5 = quantile(myData$Cost.Per.Month...Premium....)
print(quartiles5)

quartiles6 = quantile(myData$No..of.Movies)
print(quartiles6)

# Calculating IQR
IQR1 = IQR(myData$Total.Library.Size)
print(IQR1)

IQR2 = IQR(myData$No..of.TV.Shows)
print(IQR2)

IQR3 = IQR(myData$Cost.Per.Month...Basic....)
print(IQR3)

IQR4 = IQR(myData$Cost.Per.Month...Standard....)
print(IQR4)

IQR5 = IQR(myData$Cost.Per.Month...Premium....)
print(IQR5)

IQR6 = IQR(myData$No..of.Movies)
print(IQR6)

# Calculating summary
summary1 = summary(myData$Total.Library.Size)
print(summary1)

summary2 = summary(myData$No..of.TV.Shows)
print(summary2)

summary3 = summary(myData$Cost.Per.Month...Basic....)
print(summary3)

summary4 = summary(myData$Cost.Per.Month...Standard....)
print(summary4)

summary5 = summary(myData$Cost.Per.Month...Premium....)
print(summary5)

summary6 = summary(myData$No..of.Movies)
print(summary6)

"""final summary"""

summary = summary(myData)
print(summary)

scatter.smooth(myData$Cost.Per.Month...Standard....)

"""# **------Above was descriptive *analysis*------**

"""

help("t.test")

library(ggplot2)

library(tidyverse)

mu1 = mean1
print(mu1)

m2 = mean2
print(m2)

m3 = mean3
print(m3)

m4 = mean4
print(m4)

m5 = mean5
print(m5)

m6 = mean6
print(m6)

x1 = myData$Total.Library.Size
print(x1)

boxplot.stats(myData$Total.Library.Size)

boxplot(myData$Total.Library.Size)

barplot(myData$Total.Library.Size)

x2 = myData$No..of.TV.Shows
print(x2)

boxplot(myData$No..of.TV.Shows)

boxplot.stats(myData$No..of.TV.Shows)

barplot(myData$No..of.TV.Shows)

x3 = myData$Cost.Per.Month...Basic....
print(x3)

boxplot.default(myData$Cost.Per.Month...Basic....)

boxplot.stats(myData$Cost.Per.Month...Basic....)

barplot(myData$Cost.Per.Month...Basic....)

x4 = myData$Cost.Per.Month...Standard....
print(x4)

boxplot(myData$Cost.Per.Month...Standard....)

boxplot.stats(myData$Cost.Per.Month...Standard....)

barplot(myData$Cost.Per.Month...Standard....)

x5 = myData$Cost.Per.Month...Premium....
print(x5)

boxplot(myData$Cost.Per.Month...Premium....)

boxplot.stats(myData$Cost.Per.Month...Premium....)

barplot(myData$Cost.Per.Month...Premium....)

x6 = myData$No..of.Movies
print(x6)

boxplot(myData$No..of.Movies)

boxplot.stats(myData$No..of.Movies)

barplot(myData$No..of.Movies)

# One Sample T-Test
# two.sided test (by default)
t1 = t.test(myData$Total.Library.Size, mu=5314.415, conf.level = 0.95)
print(t1)

# two.sided test (by default)
t2 = t.test(x2, mu = 3518.954)
print(t2)

# two.sided test (by default)
t3 = t.test(x3, mu = 8.368462)
print(t3)

# two.sided test (by default)
t4 = t.test(x4, mu = 11.99)
print(t4)

# two.sided test (by default)
t5 = t.test(x5, mu = 15.61292)
print(t5)

# two.sided test (by default)
t6 = t.test(x6, mu = 1795.462)
print(t6)

"""# Defining sample vector
x <- rnorm(100)
y <- rnorm(100)
  
# Two.Sample T-Test
t.test(x, y)
"""

boxplot(myData$Total.Library.Size ~ myData$Cost.Per.Month...Basic....)

boxplot(myData$Total.Library.Size ~ myData$Cost.Per.Month...Standard....)

boxplot(myData$Total.Library.Size ~ myData$Cost.Per.Month...Premium....)

t.test(x1,x3)

T1_4 = t.test(x1,x4)
print(T1_4)

T1_5 = t.test(x1,x5)
print(T1_5)

T2_3 = t.test(x2,x3)
print(T2_3)

T2_4 = t.test(x2,x4)
print(T2_4)

T2_5 = t.test(x2,x5)
print(T2_5)

T6_3 = t.test(x6,x3)
print(T6_3)

T6_4 = t.test(x6,x4)
print(T6_4)

T6_5 = t.test(x6,x5)
print(T6_5)

cor.test(x1,x3)

cor.test(x1,x4)

cor.test(x1,x5)

cor.test(x2,x3)

cor.test(x2,x4)

cor.test(x2,x5)

cor.test(x6,x3)

cor.test(x6,x4)

CT6 = cor.test(x6,x5)
print(CT6)

"""poission distribution"""

rp =rpois(myData$Total.Library.Size,mean1)
print(rp)

scatter.smooth(rp)

rp2 = rpois(myData$No..of.TV.Shows,mean2)
print(rp2)

rp3 = rpois(myData$Cost.Per.Month...Basic....,mean3)
print(rp3)

rp4 = rpois(myData$Cost.Per.Month...Standard....,mean4)
print(rp4)

rp5 = rpois(myData$Cost.Per.Month...Premium....,mean5)
print(rp5)

rp6 = rpois(myData$No..of.Movies,mean6)
print(rp6)

"""In *above* Section we have used one sided & two sided T-test.
correlation test to measure any correlation in variables

Bernoulli model
"""

N = (myData$Total.Library.Size)
print(N)

scatter.smooth(N)

library(tidyverse)

dt = myData

"""values below are the median of library size and no, of tv shows

"""

a = filter(dt ,dt$Total.Library.Size<5195)
b = filter(dt ,dt$No..of.TV.Shows<3512)

"""below is the probability of no. of tv show where, S(dt) is total library size"""

n_a = nrow(a) ; n_dt = nrow(dt)
p_a = n_a/n_dt
print(p_a)

X = c(myData$Total.Library.Size)

P = (p_a)

"""rbinom(s,1,p)
where s = total library size,
      p = probability of n_a/n_dt (i.e. n/s)
"""

R1 = rbinom((dt$Total.Library.Size),1,P)
print(R1)

scatter.smooth(R1)

table(R1)

c = filter(dt ,dt$No..of.Movies<1795.462)

n_c = nrow(c) ; n_dt = nrow(dt)
p_c = n_c/n_dt
print(p_c)

P1 = (p_c)

R2 = rbinom((dt$Total.Library.Size),1,P1)
print(R2)

scatter.smooth(R2)

table(R2)

"""Uniform model"""

RU1 =runif(dt$No..of.TV.Shows,min2,max2)
print(RU1)

hist.default(RU1)

RU2 =runif(dt$No..of.Movies,min6,max6)
print(RU2)

hist.default(RU2)

RU3 =runif(dt$Cost.Per.Month...Basic...,min3,max3)
print(RU3)

hist.default(RU3)

RU4 =runif(dt$Cost.Per.Month...Standard...,min4,max4)
print(RU4)

hist.default(RU4)

RU5 = runif(dt$Cost.Per.Month...Premium...,min5,max5)
print(RU5)

hist.default(RU5)